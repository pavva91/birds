/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;

import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;

import static org.junit.jupiter.api.Assertions.*;

import java.util.stream.Stream;

class AppTest {

    @ParameterizedTest
    @MethodSource("provideIntArraysForGetMostFrequentSighting")
    void getMostFrequentSighting_OK_test(int[] input, int expected) {
        App classUnderTest = new App();
        assertEquals(expected, classUnderTest.getMostFrequentSighting(input));
    }

    @ParameterizedTest
    @MethodSource("provideIntArraysForGetMostFrequentSightingThrowError")
    void getMostFrequentSighting_must_ThrowError_test(int[] input) {
        App classUnderTest = new App();
        assertThrows(IllegalArgumentException.class, () -> {
            classUnderTest.getMostFrequentSighting(input);
        });
    }

    private static Stream<Arguments> provideIntArraysForGetMostFrequentSighting() {
        int[] birdSightings1 = { 1, 1, 2, 2, 3 };
        int[] birdSightings2 = { 1, 1, 2, 3, 2 };
        int[] birdSightings3 = { 4, 1, 2, 2, 5 };
        int[] birdSightings4 = { 4, 1, 2, 2, 5, 6, 2 };
        int[] birdSightings5 = { 4, 1, 2, 2, 5, 6, 2, 1, 1 };
        int[] birdSightings6 = { 2, 2, 1, 1, 3 };
        return Stream.of(
                Arguments.of(birdSightings1, 1),
                Arguments.of(birdSightings2, 1),
                Arguments.of(birdSightings3, 2),
                Arguments.of(birdSightings4, 2),
                Arguments.of(birdSightings5, 1),
                Arguments.of(birdSightings6, 1));

    }

    private static Stream<Arguments> provideIntArraysForGetMostFrequentSightingThrowError() {

        int[] emptyArray = {};
        int[] zeroValue = { 0 };
        int[] negativeValue = { -2 };
        return Stream.of(
                Arguments.of(emptyArray),
                Arguments.of(zeroValue),
                Arguments.of(negativeValue));
    }

}
